Linux implementation of Wi-SUN
==============================

Compile
-------

Install dependencies:

    sudo apt-get install libnl-3-dev

Compile with:

    cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug .
    ninja

Quick start
-----------

You can directly run:

    sudo ./wisun-br -u /dev/ttyACM0

You may want to run radvd with this radvd.conf:

    interface tunX
    {
            AdvSendAdvert on;
            IgnoreIfMissing on;
            AdvDefaultLifetime 0;
            prefix fd01:1236::/64
            {
            };
    };

Run wisun-br without root privilege
-----------------------------------

Ensure you have permission to acces to UART device:

    sudo usermod -d dialout YOUR_USER

(you have to logout/login after this step)

Create a tun interface:

    sudo ip tuntap add mode tun tun0 user YOUR_USER

Start wisun-br:

    ./wisun-br -t tun0 -u /dev/ttyACM0

Run wisun-br with simulated Wi-SUN MAC
--------------------------------------

    socat -d -d pty,raw,echo=0 pty,raw,echo=0
    ./wisun-mac -u /dev/pty1
    ./wisun-br -u /dev/pty2


Run a small network with one route and one border router
--------------------------------------------------------

    socat -d -d pty,raw,echo=0 pty,raw,echo=0 -> return 1,2
    socat -d -d pty,raw,echo=0 pty,raw,echo=0 -> return 3,4
    socat -d -d pty,raw,echo=0 pty,raw,echo=0 -> return 5,6
    ./wisun-mac -u /dev/pts/3 /dev/pts/1
    ./wisun-br -u /dev/pts/4
    ./wisun-mac -u /dev/pts/5 /dev/pts/2
    ./wisun-router -u /dev/pts/6


How to generate code coverage?
------------------------------

    sudo apt-get install lcov
    mkdir build-cov
    cd build-cov
    cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_FLAGS=--coverage -DCMAKE_EXE_LINKER_FLAGS=--coverage ..
    ninja
    [Run your test]
    lcov -c -d CMakeFiles/wisun-br.dir > wisun-br.trace
    genhtml -o cov-br --prefix PROJECT_DIR wisun-br.trace
    google-chrome cov-br/index.html
    lcov -c -d CMakeFiles/wisun-mac.dir > wisun-mac.trace
    genhtml -o cov-mac --prefix PROJECT_DIR wisun-mac.trace
    google-chrome cov-mac/index.html


Bugs and limitations
--------------------

It seems that the FHSS implementation does not fit well with Linux. I think
that FHSS timer should raise every 166ms, but in practice there is a lot of
jitter.
